# include<pthread.h>
# include<stdio.h>
# include<stdlib.h>
int runtime[100],process[100],waitingtime[100],turnaroundtime[100],arrivaltime[100];
int i,j,n,k=1,total=0,pos,avgwt,avgtt,b=0,min,temp;
int priority[100];
void *input();
void *sort();
void *wait();
int main()
{
pthread_t t1,t2,t3;
pthread_create(&t1,NULL,input,NULL);
pthread_create(&t2,NULL,sort,NULL);
pthread_create(&t3,NULL,wait,NULL);
pthread_join(t1,NULL);
pthread_join(t2,NULL);
pthread_join(t3,NULL);
return 0;
    
}

void *input()
{
printf("enter total number of process");
scanf("%d",&n);
for(i=0;i<n;i++)
{printf("\np[%d]",i+1);
printf("enter the run time-");
scanf("\n%d",&runtime[i]);
printf("enter the arrival time-");
scanf("\n%d",&arrivaltime[i]);
priority[i]=0;
process[i]=i+1;
}
}

void *sort()
{
for(i=0;i<n;i++)
{
pos=i;
for(j=i+1;j<n;j++)
{
if(arrivaltime[j]<arrivaltime[pos])
   pos=j;
}
temp=arrivaltime[i];
arrivaltime[i]=arrivaltime[pos];
arrivaltime[pos]=temp;

temp=runtime[i];
runtime[i]=runtime[pos];
runtime[pos]=temp;

temp=process[i];
process[i]=process[pos];
process[pos]=temp;
}

for(j=0;j<n;j++)
{
b=b+runtime[j];
min=runtime[k];
for(i=k;i<n;i++)
{
if(b>=arrivaltime[i] && runtime[i]<min)
{
temp=arrivaltime[k];
arrivaltime[k]=arrivaltime[i];
arrivaltime[i]=temp;

temp=runtime[k];
runtime[k]=runtime[i];
runtime[i]=temp;
 
temp=process[k];
process[k]=process[i];
process[i]=temp;
}
}
k++;
}
}
void *wait()
{
waitingtime[0]=0;
for(i=1;i<n;i++)
{
waitingtime[i]=0;
for(j=0;j<i;j++)
{
waitingtime[i]+=runtime[j];
}
waitingtime[i]=waitingtime[i]-arrivaltime[i];
total+=waitingtime[i];
priority[i]=1+(total/runtime[i]);
}

avgwt=total/n;
total=0;
printf("\nProcess\t  Run time  \tArrival time \t Priority \t Waiting time \t Turnaround time");
for(i=0;i<n;i++)
{
turnaroundtime[i]=runtime[i]+waitingtime[i];
total+=turnaroundtime[i];
printf("\n%d\t\t%d\t\t%d\t\t%d\t\t%d\t\t%d",process[i],runtime[i],arrivaltime[i],priority[i],waitingtime[i],turnaroundtime[i]);
}
avgtt=total/n;
printf("\n Average waiting time:-%d",avgwt);
printf("\n Average turnaround time:-%d",avgtt);
}
